#!/bin/bash

MODE=""
ARCH=""
ACTION=""
CONNECT="false"

usage()
{
    echo ""
    echo "help: image [command] [-c | --container]"
    echo "    Display information about builtin commands."
    echo ""
    echo "    This is used to build the HOOBS SD card images."
    echo ""
    echo "    Note:"
    echo "        This script requires elevated permissions, please run this with"
    echo "        SUDO or ROOT privileges."
    echo ""
    echo "    Commands:"
    echo "        build                    builds stable architectures"
    echo "        build connect            builds the hoobs connect interface"
    echo "        volume create            create the build volumes"
    echo "        volume remove            remove the build volumes"
    echo ""
    echo "    Options:"
    echo "        -h, --help               displays this help menu"
    echo ""
    echo "    Returns:"
    echo "        Returns success unless the install fails."
    echo ""
}

line()
{
    echo "--------------------------------------------------------------------------------------------------------------------------"
}

while [ "$1" != "" ]; do
    case $1 in
        build )             MODE="build"
                            ;;

        volume )            MODE="volume"
                            ;;

        create )            ACTION="create"
                            ;;

        remove )            ACTION="remove"
                            ;;

        connect )           CONNECT="true"
                            ;;

        -h | --help )       usage
                            exit
                            ;;

        * )                 usage
                            exit
    esac

    shift
done

case $MODE in
    "volume" )  if [[ "$ACTION" = "create" ]]; then
                    docker volume create ARM7
                    docker volume create ARM6
                fi

                if [[ "$ACTION" = "remove" ]]; then
                    docker volume rm ARM7
                    docker volume rm ARM6
                fi

                ;;

    "build" )   if [[ "$CONNECT" = "true" ]]; then
                    if [[ -f "../hoobs-connect/.gitignore" ]]; then
                        cd ../hoobs-connect/

                        rm -f ./builds/wifi-connect-hoobs.tar.gz
                        cp -R ./ui ./builds/
                        cd ./builds/
                        tar -cvzf ui.tar.gz ./ui/*
                        mkdir ./wifi-connect-hoobs
                        mv ./ui ./wifi-connect-hoobs/
                        mv ./ui.tar.gz ./wifi-connect-hoobs/
                        tar -cvzf wifi-connect-hoobs.tar.gz ./wifi-connect-hoobs/*
                        chmod 755 ./wifi-connect-hoobs.tar.gz
                        rm -fR ./wifi-connect-hoobs
                    else
                        echo "You need to clone the \"hoobs-connect\" repository at the same level as \"hoobs-core\"."
                        echo "Run these commands."
                        echo "    cd ../"
                        echo "    git clone https://github.com/hoobs-org/hoobs-connect.git"
                    fi
                else
                    echo ""
                    echo "Building ARM7"
                    line

                    docker rm -v pigen_work > /dev/null 2>&1
                    ./build-docker.sh -c ARM7

                    line
                    echo ""
                    echo "Building ARM6"

                    docker rm -v pigen_work > /dev/null 2>&1
                    ./build-docker.sh -c ARM6

                    line
                    echo ""
                fi

                ;;

    * )         usage
                ;;
esac
